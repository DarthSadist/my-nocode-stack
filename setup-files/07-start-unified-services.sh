#!/bin/bash

echo -e "\n=================================================================="
echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π docker-compose —Ñ–∞–π–ª"
echo -e "\n=================================================================="

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
if [ -f "$(dirname "$0")/check_disk_space.sh" ]; then
    source "$(dirname "$0")/check_disk_space.sh"
else
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ –ø—Ä—è–º–æ –≤ —Å–∫—Ä–∏–ø—Ç–µ, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
    check_disk_space() {
        local required_space=$1 # –≤ MB
        local mount_point=${2:-"/"}
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ –≤ KB
        local free_space=$(df -k "$mount_point" | awk 'NR==2 {print $4}')
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ MB –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        local free_space_mb=$((free_space / 1024))
        
        if [ $free_space_mb -lt $required_space ]; then
            echo "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ $mount_point" >&2
            echo "–¢—Ä–µ–±—É–µ—Ç—Å—è: $required_space MB, –î–æ—Å—Ç—É–ø–Ω–æ: $free_space_mb MB" >&2
            return 1
        else
            echo "‚úÖ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ $mount_point: $free_space_mb MB"
            return 0
        fi
    }

    clean_docker_space() {
        echo "‚öôÔ∏è –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
        
        # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        echo "‚Üí –£–¥–∞–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
        sudo docker container prune -f
        
        # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤
        echo "‚Üí –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
        sudo docker image prune -f
        
        # –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ç–æ–º–æ–≤
        echo "‚Üí –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ç–æ–º–æ–≤..."
        sudo docker volume prune -f
        
        echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –¢–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ Docker:"
        sudo docker system df
    }
fi 

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è Docker-–æ–±—Ä–∞–∑–∞
check_docker_image() {
    local image=$1
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –æ–±—Ä–∞–∑–∞: $image"
    if ! sudo docker pull $image &>/dev/null; then
        echo "‚ùå –û–®–ò–ë–ö–ê: –û–±—Ä–∞–∑ Docker '$image' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" >&2
        return 1
    else
        echo "‚úÖ –û–±—Ä–∞–∑ '$image' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Caddyfile
check_and_fix_caddyfile() {
    local caddyfile="/opt/Caddyfile"
    echo -e "\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Caddyfile –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫..."
    
    if [ ! -f "$caddyfile" ]; then
        echo "‚ùå –û–®–ò–ë–ö–ê: Caddyfile –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $caddyfile" >&2
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π email –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    if grep -q "email\s*$" "$caddyfile" || grep -q "email\s*{" "$caddyfile" || grep -q "email\s*\${USER_EMAIL:-" "$caddyfile"; then
        echo "‚ùå –û–®–ò–ë–ö–ê: –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å –¥–∏—Ä–µ–∫—Ç–∏–≤–æ–π 'email' –≤ Caddyfile" >&2
        echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–±–ª–µ–º–Ω–æ–π —Å—Ç—Ä–æ–∫–∏:" >&2
        grep -n "email" "$caddyfile" >&2
        
        echo "‚öôÔ∏è –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Caddyfile..."
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
        sudo cp "$caddyfile" "${caddyfile}.backup"
        
        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã email
        if grep -q "USER_EMAIL" "/opt/.env" 2>/dev/null; then
            USER_EMAIL=$(grep "USER_EMAIL" "/opt/.env" | cut -d'=' -f2)
            echo "‚úÖ –ù–∞–π–¥–µ–Ω email –≤ .env —Ñ–∞–π–ª–µ: $USER_EMAIL"
            sudo sed -i "s/email\s*$/email $USER_EMAIL/" "$caddyfile"
            sudo sed -i "s/email\s*{/email $USER_EMAIL {/" "$caddyfile"
            sudo sed -i "s/email\s*\${USER_EMAIL:-[^}]*}/email $USER_EMAIL/" "$caddyfile"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ USER_EMAIL –≤ .env —Ñ–∞–π–ª–µ" >&2
            echo "–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ Caddyfile:"
            read -p "Email: " USER_EMAIL
            if [ -z "$USER_EMAIL" ]; then
                echo "‚ùå –ù–µ —É–∫–∞–∑–∞–Ω email. –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é admin@example.com" >&2
                USER_EMAIL="admin@example.com"
            fi
            sudo sed -i "s/email\s*$/email $USER_EMAIL/" "$caddyfile"
            sudo sed -i "s/email\s*{/email $USER_EMAIL {/" "$caddyfile"
            sudo sed -i "s/email\s*\${USER_EMAIL:-[^}]*}/email $USER_EMAIL/" "$caddyfile"
        fi
        
        echo "‚úÖ Caddyfile –∏—Å–ø—Ä–∞–≤–ª–µ–Ω. –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –≤ ${caddyfile}.backup"
    else
        echo "‚úÖ –î–∏—Ä–µ–∫—Ç–∏–≤–∞ 'email' –≤ Caddyfile –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Caddyfile
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Caddyfile..."
    if ! sudo docker run --rm -v "$caddyfile:/etc/caddy/Caddyfile:ro" caddy:2 caddy validate --config /etc/caddy/Caddyfile &>/dev/null; then
        echo "‚ùå –û–®–ò–ë–ö–ê: Caddyfile —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:" >&2
        sudo docker run --rm -v "$caddyfile:/etc/caddy/Caddyfile:ro" caddy:2 caddy validate --config /etc/caddy/Caddyfile
        echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ $caddyfile –≤—Ä—É—á–Ω—É—é" >&2
        return 1
    else
        echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å Caddyfile –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–∏ Docker
ensure_docker_network() {
  local network_name="$1"
  echo "‚ùó –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–∏ Docker $network_name..."
  
  if ! sudo docker network inspect "$network_name" &>/dev/null; then
    echo "‚ùó –°–µ—Ç—å $network_name –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º..."
    network_id=$(sudo docker network create "$network_name" 2>/dev/null)
    if [ $? -ne 0 ]; then
      echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ç—å $network_name" >&2
      return 1
    else
      echo "‚úÖ –°–µ—Ç—å $network_name —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞"
      return 0
    fi
  else
    echo "‚úÖ –°–µ—Ç—å $network_name —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    return 0
  fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! sudo docker info > /dev/null 2>&1; then
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω" >&2
    exit 1
fi

# –ü—É—Ç—å –∫ –µ–¥–∏–Ω–æ–º—É —Ñ–∞–π–ª—É docker-compose
UNIFIED_COMPOSE_FILE="/opt/docker-compose.yaml"
ENV_FILE="/opt/.env"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ docker-compose
if [ ! -f "$UNIFIED_COMPOSE_FILE" ]; then
    echo "‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª $UNIFIED_COMPOSE_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è ENV —Ñ–∞–π–ª–∞
if [ ! -f "$ENV_FILE" ]; then
    echo "‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª $ENV_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω." >&2
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ docker-compose —Ñ–∞–π–ª–∞
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ $UNIFIED_COMPOSE_FILE..."
sudo docker compose -f "$UNIFIED_COMPOSE_FILE" config --quiet
if [ $? -ne 0 ]; then
    echo "‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª $UNIFIED_COMPOSE_FILE —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏" >&2
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ $UNIFIED_COMPOSE_FILE –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." >&2
    exit 1
else
    echo "‚úÖ $UNIFIED_COMPOSE_FILE –≤–∞–ª–∏–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏ app-network –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
ensure_docker_network "app-network"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Caddyfile –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Caddy –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º..."
check_and_fix_caddyfile
if [ $? -ne 0 ]; then
  echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Caddy. –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É, –Ω–æ —Å–µ—Ä–≤–∏—Å Caddy –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ." >&2
  read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫–∏? (y/n): " CONTINUE
  if [[ ! $CONTINUE =~ ^[Yy]$ ]]; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º." >&2
    exit 1
  fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
if ! check_disk_space 2000; then # —Ç—Ä–µ–±—É–µ–º –º–∏–Ω–∏–º—É–º 2GB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
  echo "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤" >&2
  echo "–ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞..." >&2
  clean_docker_space
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—â–µ —Ä–∞–∑ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
  if ! check_disk_space 2000; then
    echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –î–∞–∂–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç—Å—è –º–∏–Ω–∏–º—É–º 2GB)" >&2
    echo "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞." >&2
    exit 1
  fi
fi

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π docker-compose —Ñ–∞–π–ª
echo -e "\n===============================================" 
echo "‚ö° –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —á–µ—Ä–µ–∑ –µ–¥–∏–Ω—ã–π docker-compose —Ñ–∞–π–ª"
echo -e "\n==============================================="
echo "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ (–ø–æ–ø—ã—Ç–∫–∞ 1/2)..."
sudo docker compose -f "$UNIFIED_COMPOSE_FILE" --env-file "$ENV_FILE" up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–∏—Å–æ–≤. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞..." >&2
    echo "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ (–ø–æ–ø—ã—Ç–∫–∞ 2/2)..."
    sudo docker compose -f "$UNIFIED_COMPOSE_FILE" --env-file "$ENV_FILE" up -d
    
    if [ $? -ne 0 ]; then
        echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã." >&2
        echo "–ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏..."
        
        # –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
        echo "–ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ Caddy, PostgreSQL, Redis, n8n..."
        sudo docker compose -f "$UNIFIED_COMPOSE_FILE" --env-file "$ENV_FILE" up -d caddy postgres n8n_redis n8n
        if [ $? -ne 0 ]; then
            echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∞–∂–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã." >&2
            exit 1
        else
            echo "‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏." >&2
        fi
    else
        echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã —Å–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ø—ã—Ç–∫–∏"
    fi
else
    echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã"
fi

# –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "\n===========================================\nüïí –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...\n==========================================="
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "\n===========================================\nüîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –í–°–ï–• –°–ï–†–í–ò–°–û–í\n==========================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service() {
    local service_name="$1"
    if sudo docker ps | grep -q "$service_name"; then
        echo "‚úÖ $service_name - –ó–ê–ü–£–©–ï–ù"
        return 0
    else
        echo "‚ùå $service_name - –ù–ï –ó–ê–ü–£–©–ï–ù"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã
check_service "n8n"
check_service "caddy"
check_service "postgres"
check_service "n8n_redis"
check_service "flowise"
check_service "qdrant"
check_service "crawl4ai"
check_service "watchtower"
check_service "netdata"
check_service "adminer"
check_service "wordpress"
check_service "wordpress_db"
check_service "waha"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ Caddy
echo -e "\n- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ Caddy:"
if sudo ss -tulpen | grep -q ':80\|:443'; then
    echo "‚úÖ Caddy —É—Å–ø–µ—à–Ω–æ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç—ã 80 –∏ 443"
else
    echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: Caddy (–æ–±—Ä–∞—Ç–Ω—ã–π –ø—Ä–æ–∫—Å–∏) –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç—ã 80 –∏–ª–∏ 443"
fi

# –í—ã–≤–æ–¥ –æ–±—â–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
echo -e "\n=========================================================\nüèÅ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ó–ê–ü–£–°–ö–ê:"
RUNNING_COUNT=$(sudo docker ps --format "{{.Names}}" | wc -l)
echo "   ‚úì –£—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ: $RUNNING_COUNT —Å–µ—Ä–≤–∏—Å–æ–≤"
FAILED_COUNT=$(( 13 - $RUNNING_COUNT )) # 13 - –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤
if [ $FAILED_COUNT -gt 0 ]; then
    echo "   ‚úó –ù–µ –∑–∞–ø—É—â–µ–Ω–æ: $FAILED_COUNT —Å–µ—Ä–≤–∏—Å–æ–≤"
else
    echo "\n‚úÖ –í–°–ï –°–ï–†–í–ò–°–´ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–´!"
fi
echo -e "\n========================================================="
echo "–°–µ—Ä–≤–∏—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã! –°–∫–æ—Ä–æ –æ–Ω–∏ —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å."

exit 0
